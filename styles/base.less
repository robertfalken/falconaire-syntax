@import "syntax-variables";

._literal { color: @BLUE_SKY_LIGHT; }
._literal-_surroundings { color: @BLUE_SKY; }
._instance-var { color: @PINK; }
._instance-var-syntax { color: @PINK_LIGHT; }
._classish { color: @APRICOT_LIGHT; }
._variables { color: @LAVANDER; }
._syntax { color: @WHITE; }
._flow-control { color: @PINK; }
._surrounding-strings { color: @GREEN_DARK; }
._special-string-chars { color: @GREEN_LIGHT; }
._atom {
  color: @BLUE_SKY_LIGHT;
  font-style: normal;
}

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .custom-decorations {
      background-color: @syntax-background-color;
    }

    &.line-numbers {
      background-color: @BACKGROUND;
    }

    .line-number {
      &.cursor-line {
        background-color: @BACKGROUND_LIGHT;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @GRAY_LIGHT;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

}

// Syntax styles

.syntax--comment {
  color: @GRAY_LIGHT;
  font-style: italic;
}

.syntax--keyword {
  color: @LAVANDER;

  &.syntax--operator {
    color: @syntax-text-color;
  }

}

.syntax--constant {
  color: @APRICOT;

  &.syntax--character.syntax--escape {
    color: @GREEN_LIGHT;
  }

  &.syntax--numeric {
    color: @light-orange;
  }

  &.syntax--other.syntax--color {
    color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @green;
  }
}

.syntax--variable {
  ._variables;
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--string {
  color: @green;


  &.syntax--regexp {
    color: @cyan;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @red;
  }
}

.syntax--punctuation.syntax--definition.syntax--tag.syntax--jsx {
  color: @GRAY_LIGHTER;
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--string,
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @LAVANDER;
      font-style: italic;
    }
  }

  &.syntax--section.syntax--embedded {
    color: darken(@red, 10%);
  }

}

.syntax--support {
  &.syntax--class { // JSX Component etc.
    color: @BLUE_SKY;
  }

  &.syntax--function  {
    color: @cyan;

    &.syntax--any-method {
      color: @blue;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @blue;
  }
  &.syntax--name.syntax--type {
    color: @light-orange;
    text-decoration: underline;
  }

  &.syntax--other.syntax--inherited-class {
    color: @green;
  }
  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @light-orange;
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @BLUE_SKY;
  }

  &.syntax--other.syntax--attribute-name {
    color: @BLUE_SKY_LIGHT;

    &.syntax--id {
      color: @blue;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @light-orange;
  }

  .syntax--brace {
    &.syntax--curly {
      color: @LAVANDER_LIGHT;
    }
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @LAVANDER;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @LAVANDER;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @LAVANDER;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}

// Special symtax
.syntax--keyword.syntax--operator.syntax--arithmetic,
.syntax--generator.syntax--asterisk,
.syntax--keyword.syntax--operator.syntax--spread,
.syntax--storage.syntax--type.syntax--function.syntax--arrow {
  color: @PINK;
}

.syntax--punctuation.syntax--definition.syntax--quasi,
.syntax--punctuation.syntax--definition.syntax--string {
  ._surrounding-strings;
}

.syntax--punctuation.syntax--quasi.syntax--element {
  color: @GREEN_LIGHT;
}

.syntax--string.syntax--unquoted {
  color: @GRAY_LIGHTEST;
  font-style: normal;
}

.syntax--keyword.syntax--control.syntax--flow {
  ._flow-control;
}

.syntax--JSXNested {
  color: @GRAY_LIGHTEST;
}

.syntax--entity.syntax--name.syntax--class,
.syntax--entity.syntax--name.syntax--function {
  ._classish;
}

.syntax--source.syntax--jsx {
  color: @green;
}
.syntax--punctuation.syntax--separator.syntax--key-value,
.syntax--meta.syntax--brace.syntax--round,
.syntax--punctuation.syntax--section.syntax--class,
.syntax--punctuation.syntax--operation.syntax--graphql,
.syntax--meta.syntax--brace.syntax--curly.syntax--litobj,
.syntax--support.syntax--type.syntax--builtin.syntax--graphql,
.syntax--punctuation.syntax--colon.syntax--graphql,
.syntax--meta.syntax--brace.syntax--square,
.syntax--meta.syntax--brace.syntax--curly,
.syntax--meta.syntax--delimiter.syntax--comma {
  ._syntax;
}
.syntax--punctuation.syntax--terminator.syntax--statement {
  color: @GRAY_LIGHTER;
}

.syntax--punctuation.syntax--section.syntax--embedded.syntax--jsx {
  color: @BLUE_SKY;
}

atom-text-editor .line.cursor-line.highlight-line {
  background-color: @BACKGROUND_LIGHT;
}

.syntax--entity.syntax--name.syntax--type {
  text-decoration: none;
  color: @APRICOT;
}

.syntax--punctuation.syntax--section.syntax--embedded {
  ._special-string-chars;
}

.syntax--variable.syntax--other.syntax--readwrite.syntax--instance {
  color: @PINK;
  .syntax--punctuation.syntax--definition.syntax--variable {
    color: @PINK_LIGHT;
  }
}

.syntax--constant.syntax--language {
  font-style: italic;
}

// vars and functions
.syntax--storage.syntax--type,
.syntax--keyword.syntax--control {
  color: @LAVANDER_LIGHT;
}

// Literals
.syntax--punctuation.syntax--section.syntax--list.syntax--elixir,
.syntax--punctuation.syntax--section.syntax--array {
  ._literal-_surroundings;
}
.syntax--string.syntax--quoted.syntax--double.syntax--interpolated.syntax--elixir,
.syntax--string.syntax--quoted.syntax--other {
  ._literal;
}

// Elixir start
.syntax--elixir {
  .syntax--constant.syntax--other.syntax--symbol {
    ._atom;
  }
  .syntax--keyword.syntax--operator.syntax--other {
    color: @PINK;
  }
  .syntax--variable.syntax--other.syntax--constant {
    color: @APRICOT;
  }
  .syntax--punctuation.syntax--definition.syntax--variable {
    ._instance-var-syntax;
  }
  .syntax--variable.syntax--other.syntax--readwrite.syntax--module {
    ._instance-var;
  }
  .syntax--unused {
    color: @LAVANDER_DARK;
  }
}
// Elixir end


// Ruby start
atom-text-editor[data-grammar="source ruby"] {
  .syntax--keyword.syntax--control.syntax--class {
    font-style: italic;
    color: @LAVANDER_LIGHT;
  }
  .syntax--variable.syntax--other.syntax--object.syntax--property {
    color: @PINK;
  }
  .syntax--keyword.syntax--operator.syntax--arithmetic {
    color: @PINK;
  }
  .syntax--constant.syntax--other.syntax--symbol {
    ._atom;
  }
  .syntax--entity.syntax--other.syntax--inherited-class {
    color: @PINK_DARKER;
  }
  .syntax--variable.syntax--other.syntax--constant {
    color: @APRICOT_LIGHT;
  }
  .syntax--constant.syntax--other.syntax--symbol {
    color: @BLUE_SKY_LIGHT;
  }
}
// Ruby end
